CREATE SCHEMA pgpro_toast;
CREATE EXTENSION toastapi with SCHEMA pgpro_toast;
CREATE FUNCTION dummy_toaster_handler(internal)
RETURNS internal
AS '$libdir/toastapi'
LANGUAGE C;
-- add_toaster()
SELECT pgpro_toast.add_toaster(NULL, NULL);
 add_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.add_toaster(NULL, 'foo');
 add_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.add_toaster('bar', NULL);
 add_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.add_toaster('', '');
ERROR:  invalid name syntax
SELECT pgpro_toast.add_toaster('foo', '');
ERROR:  invalid name syntax
SELECT pgpro_toast.add_toaster('foo', 'bar');
ERROR:  function bar(internal) does not exist
SELECT pgpro_toast.add_toaster('dummy', 'foo');
ERROR:  function foo(internal) does not exist
SELECT pgpro_toast.add_toaster('dummy', 'dummy_toaster_handler') AS dummy_toaster_oid
\gset
SELECT :dummy_toaster_oid <> 0;
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.add_toaster('dummy', 'foo');
ERROR:  function foo(internal) does not exist
SELECT :dummy_toaster_oid = pgpro_toast.add_toaster('dummy', 'dummy_toaster_handler');
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.add_toaster('foo', 'dummy_toaster_handler') AS foo_toaster_oid
\gset
SELECT :foo_toaster_oid <> 0;
 ?column? 
----------
 t
(1 row)

SELECT :foo_toaster_oid <> :dummy_toaster_oid;
 ?column? 
----------
 t
(1 row)

SELECT :foo_toaster_oid = pgpro_toast.add_toaster('foo', 'dummy_toaster_handler');
 ?column? 
----------
 t
(1 row)

-- drop_toaster()
SELECT pgpro_toast.drop_toaster(NULL);
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('bar');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('foo') = :foo_toaster_oid;
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.drop_toaster('foo');
 drop_toaster 
--------------
             
(1 row)

CREATE TABLE tab (id int, jb jsonb, b_comp bytea, b_uncomp bytea STORAGE external);
-- set_toaster()
SELECT pgpro_toast.set_toaster('', '', '');
ERROR:  invalid name syntax
SELECT pgpro_toast.set_toaster('foo', 'bar', 'baz');
ERROR:  relation "bar" does not exist
SELECT pgpro_toast.set_toaster('foo', 'tab', 'baz');
ERROR:  cannot find toaster with name "foo"
SELECT pgpro_toast.set_toaster('dummy', 'tab', 'bar');
ERROR:  column "bar" of relation "tab" does not exist
SELECT pgpro_toast.set_toaster('dummy', 'tab', 'id');
ERROR:  data type integer can not be toasted
SELECT pgpro_toast.set_toaster('dummy', 'tab', 'jb');
ERROR:  toaster "dummy" does not support type jsonb
SELECT pgpro_toast.set_toaster('dummy', 'tab', 'b_uncomp');
ERROR:  toaster "dummy" supports only STORAGE EXTENDED
SELECT pgpro_toast.set_toaster('dummy', 'tab', 'b_comp') = :dummy_toaster_oid;
 ?column? 
----------
 t
(1 row)

-- get_toaster()
SELECT pgpro_toast.get_toaster('', '');
ERROR:  invalid name syntax
SELECT pgpro_toast.get_toaster('foo', 'bar');
ERROR:  relation "foo" does not exist
SELECT pgpro_toast.get_toaster('tab', 'bar');
ERROR:  column "bar" of relation "tab" does not exist
SELECT pgpro_toast.get_toaster('tab', 'id');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'jb');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_uncomp');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_comp') = :dummy_toaster_oid;
NOTICE:  dummy
 ?column? 
----------
 t
(1 row)

-- reset_toaster()
SELECT pgpro_toast.reset_toaster('', '');
ERROR:  invalid name syntax
SELECT pgpro_toast.reset_toaster('foo', 'bar');
ERROR:  relation "foo" does not exist
SELECT pgpro_toast.reset_toaster('tab', 'bar');
ERROR:  column "bar" of relation "tab" does not exist
SELECT pgpro_toast.reset_toaster('tab', 'id');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'jb');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'b_uncomp');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'b_comp');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_comp');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'b_comp');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_comp');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.set_toaster('dummy', 'tab', 'b_comp') = :dummy_toaster_oid;
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_comp') = :dummy_toaster_oid;
NOTICE:  dummy
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'b_comp');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.get_toaster('tab', 'b_comp');
 get_toaster 
-------------
            
(1 row)

SELECT pgpro_toast.set_toaster('dummy', 'tab', 'b_comp') = :dummy_toaster_oid;
 ?column? 
----------
 t
(1 row)

-- drop_toaster()
SELECT pgpro_toast.drop_toaster(NULL);
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('foo');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('dummy');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.drop_toaster('dummy');
 drop_toaster 
--------------
             
(1 row)

SELECT pgpro_toast.reset_toaster('tab', 'b_comp');
 reset_toaster 
---------------
             0
(1 row)

SELECT pgpro_toast.drop_toaster('dummy') = :dummy_toaster_oid;
 ?column? 
----------
 t
(1 row)

SELECT pgpro_toast.drop_toaster('dummy');
 drop_toaster 
--------------
             
(1 row)

DROP EXTENSION toastapi;
